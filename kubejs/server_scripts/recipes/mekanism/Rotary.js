ServerEvents.recipes((event) => {
	let { mekanism } = event.recipes

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:brine"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:brine"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:brine", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:brine", 200))
		.id("mekanism:rotary/brine")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:chlorine"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:chlorine"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:chlorine", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:chlorine", 200))
		.id("mekanism:rotary/chlorine")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:ethene"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:ethene"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:ethene", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:ethene", 200))
		.id("mekanism:rotary/ethene")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:hydrofluoric_acid"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:hydrofluoric_acid"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:hydrofluoric_acid", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:hydrofluoric_acid", 200))
		.id("mekanism:rotary/hydrofluoric_acid")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:hydrogen_chloride"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:hydrogen_chloride"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:hydrogen_chloride", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:hydrogen_chloride", 200))
		.id("mekanism:rotary/hydrogen_chloride")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:hydrogen"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:hydrogen"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:hydrogen", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:hydrogen", 200))
		.id("mekanism:rotary/hydrogen")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:lithium"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:lithium"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:lithium", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:lithium", 200))
		.id("mekanism:rotary/lithium")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:oxygen"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:oxygen"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:oxygen", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:oxygen", 200))
		.id("mekanism:rotary/oxygen")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:sodium"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:sodium"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:sodium", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:sodium", 200))
		.id("mekanism:rotary/sodium")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:steam"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:steam"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:steam", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:steam", 200))
		.id("mekanism:rotary/steam")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:sulfur_dioxide"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:sulfur_dioxide"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:sulfur_dioxide", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:sulfur_dioxide", 200))
		.id("mekanism:rotary/sulfur_dioxide")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:sulfur_trioxide"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:sulfur_trioxide"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:sulfur_trioxide", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:sulfur_trioxide", 200))
		.id("mekanism:rotary/sulfur_trioxide")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:sulfuric_acid"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:sulfuric_acid"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:sulfuric_acid", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:sulfuric_acid", 200))
		.id("mekanism:rotary/sulfuric_acid")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:superheated_sodium"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:superheated_sodium"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:superheated_sodium", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:superheated_sodium", 200))
		.id("mekanism:rotary/superheated_sodium")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:uranium_hexafluoride"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:uranium_hexafluoride"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:uranium_hexafluoride", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:uranium_hexafluoride", 200))
		.id("mekanism:rotary/uranium_hexafluoride")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("forge:uranium_oxide"))
		.fluidOutput(IngredientUtils.getFirstFluidId("mekanism:uranium_oxide"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:uranium_oxide", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:uranium_oxide", 200))
		.id("mekanism:rotary/uranium_oxide")

	mekanism.rotary()
		.fluidInput(IngredientUtils.getFirstFluidId("minecraft:water"))
		.fluidOutput(IngredientUtils.getFirstFluidId("minecraft:water"))
		.gasInput(IngredientUtils.ofMekanismGas("mekanism:water_vapor", 200))
		.gasOutput(IngredientUtils.ofMekanismGas("mekanism:water_vapor", 200))
		.id("mekanism:rotary/water")


	mekanism.rotary()
		.fluidInput(Fluid.of("cmi:fluid_nitroglycerine", 200))
		.gasOutput("200x cmi:nitroglycerine")
		.fluidOutput(Fluid.of("cmi:fluid_nitroglycerine", 200))
		.gasInput("200x cmi:nitroglycerine")
})